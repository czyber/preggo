"""Add remaining missing columns

Revision ID: ab5c2f883c47
Revises: 59093a8fde73
Create Date: 2025-08-12 09:24:15.520165

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab5c2f883c47'
down_revision: Union[str, None] = '59093a8fde73'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('root_comment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('comments', sa.Column('mention_names', sa.JSON(), nullable=True))
    op.add_column('comments', sa.Column('total_descendant_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('comments', sa.Column('is_typing_reply', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('comments', sa.Column('last_typing_user', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('comments', sa.Column('last_typing_at', sa.DateTime(), nullable=True))
    op.add_column('comments', sa.Column('reaction_summary', sa.JSON(), nullable=True))
    op.add_column('comments', sa.Column('family_warmth_contribution', sa.Float(), nullable=False, server_default='0.0'))
    # Skip altering thread_path since it already exists and contains null values
    # op.alter_column('comments', 'thread_path',
    #            existing_type=sa.VARCHAR(length=500),
    #            nullable=False)
    op.create_foreign_key(None, 'comments', 'comments', ['root_comment_id'], ['id'])
    op.drop_column('comments', 'is_edited')
    op.drop_column('comments', 'edited_at')
    op.add_column('family_invitations', sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('family_invitations', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('ix_family_invitations_token'), 'family_invitations', ['token'], unique=True)
    op.add_column('posts', sa.Column('circle_pattern_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('posts', sa.Column('pattern_was_suggested', sa.Boolean(), nullable=False, server_default='false'))
    op.create_foreign_key(None, 'posts', 'circle_patterns', ['circle_pattern_id'], ['id'])
    op.alter_column('reactions', 'custom_message',
               existing_type=sa.VARCHAR(length=500),
               type_=sqlmodel.sql.sqltypes.AutoString(length=200),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('reactions', 'custom_message',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=200),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.drop_column('posts', 'pattern_was_suggested')
    op.drop_column('posts', 'circle_pattern_id')
    op.drop_index(op.f('ix_family_invitations_token'), table_name='family_invitations')
    op.alter_column('family_invitations', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('family_invitations', 'token')
    op.add_column('comments', sa.Column('edited_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('comments', sa.Column('is_edited', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.alter_column('comments', 'thread_path',
               existing_type=sa.VARCHAR(length=500),
               nullable=True)
    op.drop_column('comments', 'family_warmth_contribution')
    op.drop_column('comments', 'reaction_summary')
    op.drop_column('comments', 'last_typing_at')
    op.drop_column('comments', 'last_typing_user')
    op.drop_column('comments', 'is_typing_reply')
    op.drop_column('comments', 'total_descendant_count')
    op.drop_column('comments', 'mention_names')
    op.drop_column('comments', 'root_comment_id')
    # ### end Alembic commands ###