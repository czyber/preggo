"""Create complete pregnancy tracking schema

Revision ID: 54584cc27ecc
Revises: 
Create Date: 2025-08-03 17:37:33.325448

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '54584cc27ecc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
    op.create_table('log',
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('extra_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('profile_image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('notification_preferences',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('categories', sa.JSON(), nullable=True),
    sa.Column('delivery_schedule', sa.JSON(), nullable=True),
    sa.Column('family_settings', sa.JSON(), nullable=True),
    sa.Column('quiet_hours', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('pregnancies',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_ids', sa.JSON(), nullable=True),
    sa.Column('pregnancy_details', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'ARCHIVED', name='pregnancystatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointments',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('ROUTINE_CHECKUP', 'ULTRASOUND', 'GLUCOSE_TEST', 'SPECIALIST', 'EMERGENCY', 'FOLLOW_UP', name='appointmenttype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('share_with_family', sa.Boolean(), nullable=False),
    sa.Column('shared_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('cancelled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_contacts',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relationship', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_primary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_secondary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('can_view_all_updates', sa.Boolean(), nullable=False),
    sa.Column('notify_on_emergency', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_groups',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum('IMMEDIATE_FAMILY', 'EXTENDED_FAMILY', 'FRIENDS', 'SUPPORT_CIRCLE', name='grouptype'), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('custom_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_timelines',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('grouped_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('privacy_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('important_dates',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_reminder', sa.Boolean(), nullable=False),
    sa.Column('reminder_days_before', sa.Integer(), nullable=True),
    sa.Column('share_with_family', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_books',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('contributors', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'GENERATING', 'READY', 'SHARED', name='memorybookstatus'), nullable=False),
    sa.Column('generated_pdf_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('generated_web_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mood_entries',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mood', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mood_score', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('date_recorded', sa.Date(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('factors', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('MILESTONE', 'WEEKLY_UPDATE', 'BELLY_PHOTO', 'ULTRASOUND', 'APPOINTMENT', 'SYMPTOM_SHARE', 'CELEBRATION', 'QUESTION', 'ANNOUNCEMENT', 'MEMORY', 'PREPARATION', name='posttype'), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('privacy', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='poststatus'), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pregnancy_health',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('current_metrics', sa.JSON(), nullable=True),
    sa.Column('sharing', sa.JSON(), nullable=True),
    sa.Column('alerts', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pregnancy_id')
    )
    op.create_table('pregnancy_notifications',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('NEW_WEEK', 'MILESTONE_DUE', 'WEEK_SUMMARY', 'NEW_FAMILY_POST', 'POST_REACTION', 'COMMENT_ON_POST', 'FAMILY_MEMBER_JOINED', 'MENTION_IN_POST', 'APPOINTMENT_REMINDER', 'SYMPTOM_CHECK_IN', 'WEIGHT_TRACKING_REMINDER', 'MILESTONE_CELEBRATION', 'MEMORY_BOOK_UPDATE', 'WEEKLY_PHOTO_REMINDER', 'FAMILY_QUESTION', 'SUPPORT_MESSAGE', 'CELEBRATION_INVITE', name='pregnancynotificationtype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('category', sa.Enum('PREGNANCY_PROGRESS', 'FAMILY_ACTIVITY', 'HEALTH_REMINDERS', 'SPECIAL_MOMENTS', 'SYSTEM_UPDATES', name='notificationcategory'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('delivery_methods', sa.JSON(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('action_taken', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('symptom_tracking',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symptom_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('severity', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Enum('RARE', 'OCCASIONAL', 'FREQUENT', 'DAILY', name='symptomfrequency'), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('date_recorded', sa.Date(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('relief_methods', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weekly_checklists',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('task', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('share_with_family', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weekly_updates',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('baby_development', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('maternal_changes', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tips', sa.JSON(), nullable=True),
    sa.Column('common_symptoms', sa.JSON(), nullable=True),
    sa.Column('appointment_recommendations', sa.JSON(), nullable=True),
    sa.Column('baby_size_length', sa.Float(), nullable=True),
    sa.Column('baby_size_weight', sa.Float(), nullable=True),
    sa.Column('baby_size_comparison', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weight_entries',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('date_recorded', sa.Date(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recorded_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.ForeignKeyConstraint(['recorded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mentions', sa.JSON(), nullable=True),
    sa.Column('edited', sa.Boolean(), nullable=False),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('reply_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_invitations',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invited_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relationship', sa.Enum('PARTNER', 'MOTHER', 'FATHER', 'SISTER', 'BROTHER', 'MOTHER_IN_LAW', 'FATHER_IN_LAW', 'GRANDMOTHER', 'GRANDFATHER', 'AUNT', 'UNCLE', 'FRIEND', 'MENTOR', 'OTHER', name='relationshiptype'), nullable=False),
    sa.Column('custom_title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'CONTRIBUTOR', 'VIEWER', name='memberrole'), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'EXPIRED', name='invitationstatus'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['family_groups.id'], ),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_members',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relationship', sa.Enum('PARTNER', 'MOTHER', 'FATHER', 'SISTER', 'BROTHER', 'MOTHER_IN_LAW', 'FATHER_IN_LAW', 'GRANDMOTHER', 'GRANDFATHER', 'AUNT', 'UNCLE', 'FRIEND', 'MENTOR', 'OTHER', name='relationshiptype'), nullable=False),
    sa.Column('custom_title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'CONTRIBUTOR', 'VIEWER', name='memberrole'), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INVITED', 'PENDING', 'INACTIVE', name='memberstatus'), nullable=False),
    sa.Column('invited_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['family_groups.id'], ),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family_messages',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sender_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('recipient_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('recipients', sa.JSON(), nullable=True),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('related_post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('read_by', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.ForeignKeyConstraint(['related_post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health_alerts',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_health_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('acknowledged', sa.Boolean(), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pregnancy_health_id'], ['pregnancy_health.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_items',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('IMAGE', 'VIDEO', 'AUDIO', name='mediatype'), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('caption', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('taken_at', sa.DateTime(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('media_metadata', sa.JSON(), nullable=True),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_chapters',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('memory_book_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('timeframe', sa.JSON(), nullable=True),
    sa.Column('auto_generated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['memory_book_id'], ['memory_books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestones',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pregnancy_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('FIRST_HEARTBEAT', 'FIRST_MOVEMENT', 'GENDER_REVEAL', 'BABY_SHOWER', 'NURSERY_COMPLETE', 'HOSPITAL_BAG_PACKED', 'MATERNITY_PHOTOS', 'NAME_CHOSEN', 'FIRST_KICK', 'CUSTOM', name='milestonetype'), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('celebration_post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shared_with', sa.JSON(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['celebration_post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['pregnancy_id'], ['pregnancies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_shares',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shared_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shared_with', sa.JSON(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shared_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['shared_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_views',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_content',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('memory_chapter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('POST', 'PHOTO', 'MILESTONE', 'QUOTE', 'TEXT', name='memorycontenttype'), nullable=False),
    sa.Column('source_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('included_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('included_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['included_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['memory_chapter_id'], ['memory_chapters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reactions',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum('LOVE', 'EXCITED', 'CARE', 'SUPPORT', 'BEAUTIFUL', 'FUNNY', 'PRAYING', name='reactiontype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timeline_entries',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('family_timeline_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('POST', 'MILESTONE', 'APPOINTMENT', 'WEEK_CHANGE', name='timelineentrytype'), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('thumbnail', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('milestone_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('importance', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='timelineimportance'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['family_timeline_id'], ['family_timelines.id'], ),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestones.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('timeline_entries')
    op.drop_table('reactions')
    op.drop_table('memory_content')
    op.drop_table('post_views')
    op.drop_table('post_shares')
    op.drop_table('milestones')
    op.drop_table('memory_chapters')
    op.drop_table('media_items')
    op.drop_table('health_alerts')
    op.drop_table('family_messages')
    op.drop_table('family_members')
    op.drop_table('family_invitations')
    op.drop_table('comments')
    op.drop_table('weight_entries')
    op.drop_table('weekly_updates')
    op.drop_table('weekly_checklists')
    op.drop_table('symptom_tracking')
    op.drop_table('pregnancy_notifications')
    op.drop_table('pregnancy_health')
    op.drop_table('posts')
    op.drop_table('mood_entries')
    op.drop_table('memory_books')
    op.drop_table('important_dates')
    op.drop_table('family_timelines')
    op.drop_table('family_groups')
    op.drop_table('emergency_contacts')
    op.drop_table('appointments')
    op.drop_table('pregnancies')
    op.drop_table('notification_preferences')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('log')
    op.drop_index(op.f('ix_items_name'), table_name='items')
    op.drop_table('items')
    # ### end Alembic commands ###